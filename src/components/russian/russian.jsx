import React, { useState, useEffect } from "react";
import Navbar from "../navbar/navbar-copmonent";
import Footer from "../footer/footer";
import TextField from "@material-ui/core/TextField";
import Button from "@material-ui/core/Button";
import { makeStyles } from "@material-ui/core/styles";
import ReactPhoneInput from "react-phone-input-2";
import { useHistory } from "react-router";
import "../uzbek/uzbek-style.scss";
import "react-phone-input-2/lib/bootstrap.css";

import { toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

const useStyles = makeStyles((theme) => ({
  root: {
    "& .MuiTextField-root": {
      margin: theme.spacing(1),
    },
  },
}));

const Token = "1988721639:AAG5xbgBiNo6YhxXBrlQy_sh6icL4WY4yR4";

const chat_id = -421317593;

const RussianCopmonent = () => {
  const history = useHistory();

  const [valueCount, setValueCount] = useState({
    id: new Date().getMilliseconds(),
    name: "",
    date: "",
    fahername: "",
    fatherphone: " ",
    mothername: "",
    motherphone: "",
    description: "",
    ourcontact: "",
  });

  function setHandleChange(e) {
    setValueCount((prev) => {
      return {
        ...prev,
        [e.target.name]: e.target.value,
      };
    });
  }

  async function HandleClick(e) {
    e.preventDefault();

    if (
      valueCount.name.length > 0 &&
      valueCount.date.length > 0 &&
      valueCount.fahername.length > 0 &&
      valueCount.fatherphone.length > 0 &&
      valueCount.mothername.length > 0 &&
      valueCount.motherphone.length > 0 &&
      valueCount.description.length > 0 &&
      valueCount.ourcontact.length > 0
    ) {
      const text = `
        üîî<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–±—ë–Ω–∫–µ:</b>üîî \n
        <b>üôç‚Äç‚ôÇÔ∏è–ò–º—è: </b> <i>${valueCount.name}</i> \n
        <b>üìÜ–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: </b> <i>${valueCount.date} \n</i>
        <b>üë®‚Äçüíº–ò–º—è –æ—Ç—Ü–∞:</b> <i>${valueCount.fahername}\n</i>
        <b>üì±–¢–µ–ª–µ—Ñ–æ–Ω –æ—Ç—Ü–∞: </b> <i>${valueCount.fatherphone}\n</i>
        <b>üë©‚Äçüíº–ò–º—è –º–∞—Ç–µ—Ä–∏: </b> <i>${valueCount.mothername}\n</i>
        <b>üì±–¢–µ–ª–µ—Ñ–æ–Ω –º–∞—Ç–µ—Ä–∏: </b> <i>${valueCount.motherphone}\n</i>
        <b>üè£–í –∫–æ—Ç–æ—Ä—ã–π –¥–µ—Ç—Å–∫–∏–π —Å–∞–¥ —Ö–æ–¥–∏–ª(–∞): </b> <i>${valueCount.description}\n</i>
        <b>üíª–û –Ω–∞—Å —É–∑–Ω–∞–ª–∏: </b> <i>${valueCount.ourcontact}\n</i>
        `;

      const data = {
        chat_id: chat_id,
        text: text,
        parse_mode: "HTML",
      };

      const options = {
        method: "POST",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      };

      const url = `https://api.telegram.org/bot${Token}/sendMessage`;
      const req = await fetch(url, options);
      const resData = await req.json();

      toast.success("–í–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞");
      history.push("/finishpage_russian");
    } else {
      toast.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é");
    }

    console.log(valueCount);
  }

  const classes = useStyles();

  return (
    <div>
      <Navbar />
      <div className="container">
        <div className="row">
          <div className="col-md-12">
            <div className="titels_regstrys">
              <h1 className="title_regstry">–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø 2021-2022</h1>
              <p>–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –†–ï–ë–Å–ù–ö–ï</p>
            </div>
          </div>
        </div>
        <div className="row">
          <div className="col-md-12 col-6"></div>
          <form
            // Validate
            className={classes.root}
            // toComplete="off"
            onSubmit={HandleClick}
          >
            <div>
              <TextField
                name="name"
                onChange={setHandleChange}
                id="standard-required"
                label="–§. –ò. –û. —Ä–µ–±—ë–Ω–∫–∞"
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—é–¥–∞"
                InputLabelProps={{
                  shrink: true,
                }}
              />

              <TextField
                error
                name="date"
                onChange={setHandleChange}
                label="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è"
                id="date"
                type="date"
                className={classes.textField}
                InputLabelProps={{
                  shrink: true,
                }}
              />
              <p className="title_parents">–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –†–û–î–ò–¢–ï–õ–Ø–•</p>
              <TextField
                error
                onChange={setHandleChange}
                name="fahername"
                label="–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –æ—Ç—Ü–∞"
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—é–¥–∞"
                id="standard-required"
                className={classes.textField}
                InputLabelProps={{
                  shrink: true,
                }}
              />
              <ReactPhoneInput
                error
                name="fatherphone"
                onChange={(fatherphone) =>
                  setValueCount((prev) => {
                    return {
                      ...prev,
                      fatherphone,
                    };
                  })
                }
                specialLabel="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:"
                defaultCountry="uz"
                value="+998"
                containerClass={classes.textField}
                enableAreaCodes={true}
              />
              <TextField
                error
                onChange={setHandleChange}
                name="mothername"
                label="–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –º–∞—Ç–µ—Ä–∏ "
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—é–¥–∞"
                id="standard-required"
                className={classes.textField}
                InputLabelProps={{
                  shrink: true,
                }}
              />
              <ReactPhoneInput
                onChange={(motherphone) =>
                  setValueCount((prev) => {
                    return {
                      ...prev,
                      motherphone,
                    };
                  })
                }
                specialLabel="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:"
                defaultCountry="uz"
                value="+998"
                containerClass={classes.textField}
                enableAreaCodes={true}
              />
              <p className="title_parents">–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø</p>
              <TextField
                onChange={setHandleChange}
                name="description"
                className="input_your_baby"
                id="standard-required"
                label="–£–∫–∞–∂–∏—Ç–µ –¥–µ—Ç—Å–∫–∏–π —Å–∞–¥, –≤ –∫–æ—Ç–æ—Ä—É—é —Ö–æ–¥–∏–ª –≤–∞—à —Ä–µ–±–µ–Ω–æ–∫ –¥–æ indigo"
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—é–¥–∞"
                InputLabelProps={{
                  shrink: true,
                }}
              />
              <TextField
                onChange={setHandleChange}
                name="ourcontact"
                className="input_our_contact"
                id="standard-required"
                label="–û—Ç–∫—É–¥–∞ –í—ã —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—Å?"
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—é–¥–∞"
                InputLabelProps={{
                  shrink: true,
                }}
              />
            </div>
            <div className="submit_button_parent">
              <Button
                type="submit"
                className="button_submit"
                variant="contained"
                color="primary"
              >
                –û–¢–ü–†–ê–í–ò–¢–¨ –ó–ê–Ø–í–ö–£
              </Button>
            </div>
          </form>
        </div>
      </div>
      <Footer />
    </div>
  );
};

export default RussianCopmonent;
